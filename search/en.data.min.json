[{"id":0,"href":"/textbook/intro/intro-1/","title":"First C++ Program","parent":"UIUC CS 128 Textbook","content":"When running a C++ program the computer always looks for and runs a function called main.\nint main() { } A function in C++ is formatted in a similar way than to Java or Kotlin!\nFirst we have the return type, in this case it is an integer or int. Then we have the name of the function, in this case main. After the name are any parameters the function takes in, in this case none. Then in the curly braces is where the rest of the code goes! Like a statement that prints out \u0026ldquo;Hello World\u0026rdquo;.\nPrinting in C++ To print out values from your program in C++ involves a few steps. First, we need to include the iostream library in our program. A library is code someone else wrote that we can easily use. This can be done with an include statement at the top of the file.\n#include \u0026lt;iostream\u0026gt; We also need to tell the program we are using code from the standard library. We can do this by adding the following,\nusing namespace std; #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World\u0026#34; \u0026lt;\u0026lt; endl; } OUTPUT: Hello World cout is a type of stream which has values inserted into it with the insertion operators \u0026lt;\u0026lt;. The program will then print the contents of the cout stream to the terminal.\nHelpful Tip cout is pronounced like see-out endl puts a newline in the stream and prints the contents of the stream to the terminal right away.\nThe following example shows how you can chain insertion operators to feed multiple things into cout.\n1 2 3 4 5 6 7 #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World \u0026#34; \u0026lt;\u0026lt; 4 \u0026lt;\u0026lt; \u0026#34;eva\u0026#34; \u0026lt;\u0026lt; endl; } OUTPUT: Hello World 4eva ","description":"When running a C++ program the computer always looks for and runs a function called main.\nint main() { } A function in C++ is formatted in a similar way than to Java or Kotlin!\nFirst we have the return type, in this case it is an integer or int. Then we have the name of the function, in this case main. After the name are any parameters the function takes in, in this case none."},{"id":1,"href":"/","title":"CS 128","parent":"","content":"Welcome to CS 128 with Professor Schatz! This is the landing page for the course and it will have links to all course components Lecture In-person from 9am-10am Mon, Wed, Fri in 1440 Siebel Center for Computer Science\nLecture Recording Lab Lab assignments meant to challenge you and your group! They are due on Sundays at 8pm. They meet in-person on Fridays for 80 mins\nHomework Homework is released after lecture and is always due the following Sunday at 8pm.\nNote you can toggle dark and light mode in the upper right-hand corner\n","description":"Welcome to CS 128 with Professor Schatz! This is the landing page for the course and it will have links to all course components Lecture In-person from 9am-10am Mon, Wed, Fri in 1440 Siebel Center for Computer Science\nLecture Recording Lab Lab assignments meant to challenge you and your group! They are due on Sundays at 8pm. They meet in-person on Fridays for 80 mins\nHomework Homework is released after lecture and is always due the following Sunday at 8pm."},{"id":2,"href":"/textbook/intro/intro-2/","title":"Objects, Types, and Variables","parent":"UIUC CS 128 Textbook","content":"Objects, types, and variables all work together to help us write programs in C++. Objects have a type and are referred to by their variable name. For example,\nint x = 9; This line of code is asking the computer for a space in memory for an object of type int that is currently the value 9. This object can be accessed later by its variable name, x.\nTerminology Word Definition Examples Type Defines a set of possible values and a set of operations for an object. int, double, char Object Holds a value of a given type. Objects are stored at specific addresses (locations) in the computer\u0026rsquo;s memory. Variable The name of an object. k, var, temp Reference Another name for an existing object Useful Primitive Types Type Value Examples int A whole number from -2,147,483,648 to 2,147,483,647. int x = -65; unsigned int A positive whole number from 0 to 4,294,967,295. unsigned int var = 9; bool true (the value 1) or false (the value 0). bool temp = true; char A character. See ASCII table for possible characters. Every character has an equivalent integer value which can be found in the ASCII table. char k = \u0026lsquo;H\u0026rsquo;; double A number with 15 or less digits. double dub = 54.67; NOTE: Later in the course you will learn about a few more types including pointers, arrays, references, and classes. For now, focus on the ones in the table above.\n","description":"Objects, types, and variables all work together to help us write programs in C++. Objects have a type and are referred to by their variable name. For example,\nint x = 9; This line of code is asking the computer for a space in memory for an object of type int that is currently the value 9. This object can be accessed later by its variable name, x.\nTerminology Word Definition Examples Type Defines a set of possible values and a set of operations for an object."},{"id":3,"href":"/tags/","title":"Tags","parent":"CS 128","content":"","description":""},{"id":4,"href":"/textbook/","title":"UIUC CS 128 Textbook","parent":"CS 128","content":"Written by Professor Jule Schatz Welcome! This textbook is meant to complement the CS 128 section taught by Professor Schatz at the University of Illinois Urbana-Champaign. However, anyone is welcome to read through the content. The content assumes you've taken an intro course in Java or Kotlin and have never seen C++ before. Students in the course are encouraged to use this resources to supplement going to lectures and doing homeworks, labs, and machine problems (MPs). Note you can toggle dark and light mode in the upper right-hand corner\n","description":"Written by Professor Jule Schatz Welcome! This textbook is meant to complement the CS 128 section taught by Professor Schatz at the University of Illinois Urbana-Champaign. However, anyone is welcome to read through the content. The content assumes you've taken an intro course in Java or Kotlin and have never seen C++ before. Students in the course are encouraged to use this resources to supplement going to lectures and doing homeworks, labs, and machine problems (MPs)."}]